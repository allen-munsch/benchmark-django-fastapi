name: Benchmark test results
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        PYTHON_VERSION: [3.7.10, 3.8.10]
        SERVED_BY: [
            "uvicorn-wsgimiddleware-with-cling",
            "gunicorn-eventlet",
            "asgi-with-static",
            "gunicorn-gevent",
            "fastapi-with-django-mounted-asgi",
            "asgi-with-static-gunicorn-w18",
            "uvicorn",
            "gunicorn-uvicornworker",
        ]
    env:
      SERVED_BY: ${{ matrix.SERVED_BY }}
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: Build the django image
        run: |
          docker build \
          -t "testdjango/web:${{ matrix.PYTHON_VERSION }}" \
          -f "./docker/web/Dockerfile" \
          --build-arg PYTHON_VERSION=${{ matrix.PYTHON_VERSION }} ./
      - name: Build the docker-compose stack
        run: docker-compose --env-file ./env.vars up -d
      - name: Check running containers
        run: docker ps -a
      - name: setup the database
        run: |
          docker-compose exec -T web bash -c ". /venv/bin/activate && python manage.py migrate"
          docker-compose exec -T web bash -c ". /venv/bin/activate && python manage.py populate_test_db"
      - name: make the test_results folder writeable
        run: chmod 777 test_results/
      - name: run the test
        run: docker-compose --env-file ./env.vars --profile load-test-run run -T load-test
      - name: store results
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: test_results/results.txt
      - name: show results
        run: cat test_results/results.txt